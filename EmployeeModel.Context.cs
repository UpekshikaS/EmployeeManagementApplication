//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeManagementApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmployeeManagementDBEntities : DbContext
    {
        public EmployeeManagementDBEntities()
            : base("name=EmployeeManagementDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<PublicHoliday> PublicHolidays { get; set; }
    
        public virtual int sp_AddEmployee(string name, string email, string jobPosition)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var jobPositionParameter = jobPosition != null ?
                new ObjectParameter("JobPosition", jobPosition) :
                new ObjectParameter("JobPosition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AddEmployee", nameParameter, emailParameter, jobPositionParameter);
        }
    
        public virtual int sp_DeleteEmployee(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteEmployee", idParameter);
        }
    
        public virtual ObjectResult<sp_GetAllEmployees_Result> sp_GetAllEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllEmployees_Result>("sp_GetAllEmployees");
        }
    
        public virtual ObjectResult<sp_GetEmployeeById_Result> sp_GetEmployeeById(Nullable<int> employeeId)
        {
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetEmployeeById_Result>("sp_GetEmployeeById", employeeIdParameter);
        }
    
        public virtual int sp_UpdateEmployee(Nullable<int> id, string name, string email, string jobPosition)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var jobPositionParameter = jobPosition != null ?
                new ObjectParameter("JobPosition", jobPosition) :
                new ObjectParameter("JobPosition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateEmployee", idParameter, nameParameter, emailParameter, jobPositionParameter);
        }
    }
}
